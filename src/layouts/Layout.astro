---
import "@fontsource/roboto/400.css";
import "@fontsource/roboto/500.css";
import "@fontsource/roboto/700.css";

import { profileConfig, siteConfig } from "@/config";
import ConfigCarrier from "@components/ConfigCarrier.astro";
import {
	AUTO_MODE,
	BANNER_HEIGHT,
	BANNER_HEIGHT_EXTEND,
	BANNER_HEIGHT_HOME,
	DARK_MODE,
	DEFAULT_THEME,
	LIGHT_MODE,
	PAGE_WIDTH,
} from "../constants/constants";
import { defaultFavicons } from "../constants/icon";
import type { Favicon } from "../types/config";
import { url, pathsEqual } from "../utils/url-utils";
import "katex/dist/katex.css";

interface Props {
	title?: string;
	banner?: string;
	description?: string;
	lang?: string;
	setOGTypeArticle?: boolean;
}

let { title, banner, description, lang, setOGTypeArticle } = Astro.props;

// apply a class to the body element to decide the height of the banner, only used for initial page load
// Swup can update the body for each page visit, but it's after the page transition, causing a delay for banner height change
// so use Swup hooks instead to change the height immediately when a link is clicked
const isHomePage = pathsEqual(Astro.url.pathname, url("/"));

// defines global css variables
// why doing this in Layout instead of GlobalStyles: https://github.com/withastro/astro/issues/6728#issuecomment-1502203757
const configHue = siteConfig.themeColor.hue;
if (!banner || typeof banner !== "string" || banner.trim() === "") {
	banner = siteConfig.banner.src;
}

// TODO don't use post cover as banner for now
banner = siteConfig.banner.src;

const enableBanner = siteConfig.banner.enable;

let pageTitle: string;
if (title) {
	pageTitle = `${title} - ${siteConfig.title}`;
} else {
	pageTitle = `${siteConfig.title} - ${siteConfig.subtitle}`;
}

const favicons: Favicon[] =
	siteConfig.favicon.length > 0 ? siteConfig.favicon : defaultFavicons;

// const siteLang = siteConfig.lang.replace('_', '-')
if (!lang) {
	lang = `${siteConfig.lang}`;
}
const siteLang = lang.replace("_", "-");

const bannerOffsetByPosition = {
	top: `${BANNER_HEIGHT_EXTEND}vh`,
	center: `${BANNER_HEIGHT_EXTEND / 2}vh`,
	bottom: "0",
};
const bannerOffset =
	bannerOffsetByPosition[siteConfig.banner.position || "center"];
---

<!doctype html>
<html
	lang={siteLang}
	class="bg-[var(--page-bg)] transition text-[14px] md:text-[16px]"
	data-overlayscrollbars-initialize
>
	<head>
		<title>{pageTitle}</title>

		<meta charset="UTF-8" />
		<meta name="description" content={description || pageTitle} />
		<meta name="author" content={profileConfig.name} />

		<meta property="og:site_name" content={siteConfig.title} />
		<meta property="og:url" content={Astro.url} />
		<meta property="og:title" content={pageTitle} />
		<meta property="og:description" content={description || pageTitle} />
		{
			setOGTypeArticle ? (
				<meta property="og:type" content="article" />
			) : (
				<meta property="og:type" content="website" />
			)
		}

		<meta name="twitter:card" content="summary_large_image" />
		<meta property="twitter:url" content={Astro.url} />
		<meta name="twitter:title" content={pageTitle} />
		<meta name="twitter:description" content={description || pageTitle} />

		<!-- Add default og:image here, using siteConfig.banner.src -->
		<meta property="og:image" content={banner} />

		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		{
			favicons.map((favicon) => (
				<link
					rel="icon"
					href={
						favicon.src.startsWith("/")
							? url(favicon.src)
							: favicon.src
					}
				/>
			))
		}

		<script
			defer
			src="https://cloud.umami.is/script.js"
			data-website-id="6234e6a9-3bdc-4626-9605-ff52b71563d9"></script>

		<!-- Set the theme before the page is rendered to avoid a flash -->
		<script
			is:inline
			define:vars={{
				DEFAULT_THEME,
				LIGHT_MODE,
				DARK_MODE,
				AUTO_MODE,
				BANNER_HEIGHT_EXTEND,
				PAGE_WIDTH,
				configHue,
			}}
		>
			// Load the theme from local storage
			const theme = localStorage.getItem("theme") || DEFAULT_THEME;
			switch (theme) {
				case LIGHT_MODE:
					document.documentElement.classList.remove("dark");
					break;
				case DARK_MODE:
					document.documentElement.classList.add("dark");
					break;
				case AUTO_MODE:
					if (
						window.matchMedia("(prefers-color-scheme: dark)")
							.matches
					) {
						document.documentElement.classList.add("dark");
					} else {
						document.documentElement.classList.remove("dark");
					}
			}

			// Load the hue from local storage
			const hue = localStorage.getItem("hue") || configHue;
			document.documentElement.style.setProperty("--hue", hue);

			// calculate the --banner-height-extend, which needs to be a multiple of 4 to avoid blurry text
			let offset = Math.floor(
				window.innerHeight * (BANNER_HEIGHT_EXTEND / 100),
			);
			offset = offset - (offset % 4);
			document.documentElement.style.setProperty(
				"--banner-height-extend",
				`${offset}px`,
			);
		</script>
		<style
			define:vars={{
				configHue,
				"page-width": `${PAGE_WIDTH}rem`,
			}}
		></style>
		<!-- defines global css variables. This will be applied to <html> <body> and some other elements idk why -->

		<slot name="head" />

		<link
			rel="alternate"
			type="application/rss+xml"
			title={profileConfig.name}
			href={`${Astro.site}rss.xml`}
		/>
		<link rel="sitemap" href="/sitemap-index.xml" />
	</head>
	<body
		class="min-h-screen transition"
		class:list={[
			{ "lg:is-home": isHomePage, "enable-banner": enableBanner },
		]}
		data-overlayscrollbars-initialize
	>
		<ConfigCarrier />
		<slot />

		<!-- increase the page height during page transition to prevent the scrolling animation from jumping -->
		<div id="page-height-extend" class="hidden h-[300vh]"></div>
	</body>
</html>
